In order to complete this task I'd like you to make a sample project which will be created in TS React.
Our focus is on the actual react code, so dont get bogged down in configuration and setups (especially if you've never done it before). If you need to use a tool such as https://playcode.io/typescript (or similar) to speed up the process then you are more than welcome.

The task will be to implement a notification centre which will display a list of notifications (model provided) to the user.

there are three types of notifications:
1. task to action & link to that thing
2. a reminder to do something & link to that thing
3. a comment by another user & link to that comment

Each notification must show the title, description, notification date, and indicate that it has been read (via graying out the row).
Notifications also need the ability to be marked as unread, marked as read & archived.
Notifications should be bulk actionable by ticking a checkbox on the row.
Indicate to the user that after 60 days their notifications will not be displayed.
Notifications should be centered in the screen and take 1/3 of the screen width.
Use setState & useEffect to mange the application state.
Sometimes the comment will be read by another user (in the case that another staff member in the same department has read/actioned this task). Please indicate this.

bonus:
1. Break unarchived/archived notifications into two tabs
2. Show a loading page (fake 1s delay)
3. Show an empty state once all notifications are archived
4. Project is on github
5. Project is setup using create-react-app, Vite or similar
6. Icons, Fonts & Good design
7. Fake promise-based api for actioning/archiving tasks w/ error handling

You're not required to finish everything, but accomplish what you can. This will help us better assess where you're at. Just so it doesn't drag on, I will set the deadline to EOD Wednesday, but if you have other commitments we can move the line in the sand.

Please clarify with me if it's not clear. (I may have forgotten something obvious)